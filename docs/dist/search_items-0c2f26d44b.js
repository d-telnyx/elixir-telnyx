searchNodes=[{"doc":"API calls for all endpoints tagged CallCommands .","ref":"TelnyxAPI.Api.CallCommands.html","title":"TelnyxAPI.Api.CallCommands","type":"module"},{"doc":"Answer call Answer an incoming call. You must issue this command before executing subsequent commands on an incoming call. Expected Webhooks: - call.answered Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call answer_request (AnswerRequest): Answer call request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_answer/4","title":"TelnyxAPI.Api.CallCommands.call_answer/4","type":"function"},{"doc":"Bridge calls Bridge two call control calls. Expected Webhooks: - call.bridged for Leg A - call.bridged for Leg B Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call bridge_request (BridgeRequest): Bridge call request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_bridge/4","title":"TelnyxAPI.Api.CallCommands.call_bridge/4","type":"function"},{"doc":"Dial Dial a number or SIP URI from a given connection. A successful response will include a call_leg_id which can be used to correlate the command with subsequent webhooks. Expected Webhooks: - call.initiated - call.answered or call.hangup - call.machine.detection.ended if answering_machine_detection was requested - call.machine.greeting.ended if answering_machine_detection was set to detect_beep , greeting_end or detect_words Parameters connection (TelnyxAPI.Connection): Connection to server call_request (CallRequest): Call request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_dial/3","title":"TelnyxAPI.Api.CallCommands.call_dial/3","type":"function"},{"doc":"Enqueue call Put the call in a queue. Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call enqueue_request (EnqueueRequest): Enqueue call request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_enqueue/4","title":"TelnyxAPI.Api.CallCommands.call_enqueue/4","type":"function"},{"doc":"Forking start Call forking allows you to stream the media from a call to a specific target in realtime. This stream can be used to enable realtime audio analysis to support a variety of use cases, including fraud detection, or the creation of AI-generated audio responses. Requests must specify either the target attribute or the rx and tx attributes. Expected Webhooks: - call.fork.started - call.fork.stopped Simple Telnyx RTP Encapsulation Protocol (STREP) Note: This header/encapsulation is not used when the rx and tx parameters have been specified; it only applies when media is forked using the target attribute. If the destination for forked media is specified using the &quot;target&quot; attribute, the RTP will be encapsulated in an extra Telnyx protocol, which adds a 24 byte header to the RTP payload in each packet. The STREP header includes the Call Control call_leg_id for stream identification, along with bits that represent the direction (inbound or outbound) of the media. This 24-byte header sits between the UDP header and the RTP header. The STREP header makes it possible to fork RTP for multiple calls (or two RTP streams for the same call) to the same IP:port, where the streams can be demultiplexed by your application using the information in the header. Of course, it's still possible to ignore this header completely, for example, if sending forked media for different calls to different ports or IP addresses. In this case, simply strip 24 bytes (or use the second byte to find the header length) from the received UDP payload to get the RTP (RTP header and payload). STREP Specification 0 1 2 3 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ |1 1|Version|L|D| HeaderLen | reserved (2 bytes) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | reserved (4 bytes, for UDP ports or anything else) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | The call_leg_id | | from Call Control | | (128 bits / 16 bytes) | | (this is binary data) | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ 11 Static bits 11, always set to 11 to easily distinguish forked media from RTP (10) and T.38 media (usually 00) and SIP (which begins with a capital letter, so begins with bits 01). This is a magic number. Version Four bits to indicate the version number of the protocol, starting at 0001. L One bit to represent the leg of the call (A or B). 0 represents the A (first) leg of the call. 1 represents the B (second) leg of the call. D One bit to represent the direction of this RTP stream. 0 represents media received by Telnyx. 1 represents media transmitted by Telnyx. HeaderLen (1 byte) The length of the header in bytes. Note that this value does not include the length of the payload. The total size of the RTP can be calculated by subtracting the HeaderLen from the UDP length (minus 8 for the UDP header). In version 1, this value will always be 24. Reserved (6 bytes) Reserved for future use and to make sure that the header is a multiple of 32 bits Call Leg ID A 128-bit identifier for the call leg. This is the call_leg_id from Call Control. Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call start_forking_request (StartForkingRequest): Fork media request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_fork_start/4","title":"TelnyxAPI.Api.CallCommands.call_fork_start/4","type":"function"},{"doc":"Forking stop Stop forking a call. Expected Webhooks: - call.fork.stopped Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call stop_forking_request (StopForkingRequest): Stop forking media request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_fork_stop/4","title":"TelnyxAPI.Api.CallCommands.call_fork_stop/4","type":"function"},{"doc":"Gather stop Stop current gather. Expected Webhooks: - call.gather.ended Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call stop_gather_request (StopGatherRequest): Stop current gather opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_gather_stop/4","title":"TelnyxAPI.Api.CallCommands.call_gather_stop/4","type":"function"},{"doc":"Gather using audio Play an audio file on the call until the required DTMF signals are gathered to build interactive menus. You can pass a list of valid digits along with an 'invalid_audio_url', which will be played back at the beginning of each prompt. Playback will be interrupted when a DTMF signal is received. The Answer command must be issued before the gather_using_audio command. Expected Webhooks: - call.playback.started - call.playback.ended - call.dtmf.received (you may receive many of these webhooks) - call.gather.ended Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call gather_using_audio_request (GatherUsingAudioRequest): Gather using audio request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_gather_using_audio/4","title":"TelnyxAPI.Api.CallCommands.call_gather_using_audio/4","type":"function"},{"doc":"Gather using speak Convert text to speech and play it on the call until the required DTMF signals are gathered to build interactive menus. You can pass a list of valid digits along with an 'invalid_payload', which will be played back at the beginning of each prompt. Speech will be interrupted when a DTMF signal is received. The Answer command must be issued before the gather_using_speak command. Expected Webhooks: - call.dtmf.received (you may receive many of these webhooks) - call.gather.ended Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call gather_using_speak_request (GatherUsingSpeakRequest): Gather using speak request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_gather_using_speak/4","title":"TelnyxAPI.Api.CallCommands.call_gather_using_speak/4","type":"function"},{"doc":"Hangup call Hang up the call. Expected Webhooks: - call.hangup - call.recording.saved Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call hangup_request (HangupRequest): Hangup request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_hangup/4","title":"TelnyxAPI.Api.CallCommands.call_hangup/4","type":"function"},{"doc":"Play audio URL Play an audio file on the call. If multiple play audio commands are issued consecutively, the audio files will be placed in a queue awaiting playback. Notes: - When overlay is enabled, target_legs is limited to self . - A customer cannot Play Audio with overlay=true unless there is a Play Audio with overlay=false actively playing. Expected Webhooks: - call.playback.started - call.playback.ended Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call play_audio_url_request (PlayAudioUrlRequest): Play audio URL request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_playback_start/4","title":"TelnyxAPI.Api.CallCommands.call_playback_start/4","type":"function"},{"doc":"Stop audio playback Stop audio being played on the call. Expected Webhooks: - call.playback.ended or call.speak.ended Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call playback_stop_request (PlaybackStopRequest): Stop audio playback request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_playback_stop/4","title":"TelnyxAPI.Api.CallCommands.call_playback_stop/4","type":"function"},{"doc":"Record pause Pause recording the call. Recording can be resumed via Resume recording command. Expected Webhooks: There are no webhooks associated with this command. Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call pause_recording_request (PauseRecordingRequest): Pause recording call request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_record_pause/4","title":"TelnyxAPI.Api.CallCommands.call_record_pause/4","type":"function"},{"doc":"Record resume Resume recording the call. Expected Webhooks: There are no webhooks associated with this command. Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call resume_recording_request (ResumeRecordingRequest): Resume recording call request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_record_resume/4","title":"TelnyxAPI.Api.CallCommands.call_record_resume/4","type":"function"},{"doc":"Recording start Start recording the call. Recording will stop on call hang-up, or can be initiated via the Stop Recording command. Expected Webhooks: - call.recording.saved Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call start_recording_request (StartRecordingRequest): Start recording audio request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_record_start/4","title":"TelnyxAPI.Api.CallCommands.call_record_start/4","type":"function"},{"doc":"Recording stop Stop recording the call. Expected Webhooks: - call.recording.saved Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call stop_recording_request (StopRecordingRequest): Stop recording call request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_record_stop/4","title":"TelnyxAPI.Api.CallCommands.call_record_stop/4","type":"function"},{"doc":"SIP Refer a call Initiate a SIP Refer on a Call Control call. You can initiate a SIP Refer at any point in the duration of a call. Expected Webhooks: - call.refer.started - call.refer.completed - call.refer.failed Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call refer_request (ReferRequest): Refer request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_refer/4","title":"TelnyxAPI.Api.CallCommands.call_refer/4","type":"function"},{"doc":"Reject a call Reject an incoming call. Expected Webhooks: - call.hangup Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call reject_request (RejectRequest): Reject request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_reject/4","title":"TelnyxAPI.Api.CallCommands.call_reject/4","type":"function"},{"doc":"Send DTMF Sends DTMF tones from this leg. DTMF tones will be heard by the other end of the call. Expected Webhooks: There are no webhooks associated with this command. Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call send_dtmf_request (SendDtmfRequest): Send DTMF request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_send_dtmf/4","title":"TelnyxAPI.Api.CallCommands.call_send_dtmf/4","type":"function"},{"doc":"Speak text Convert text to speech and play it back on the call. If multiple speak text commands are issued consecutively, the audio files will be placed in a queue awaiting playback. Expected Webhooks: - call.speak.started - call.speak.ended Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call speak_request (SpeakRequest): Speak request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_speak/4","title":"TelnyxAPI.Api.CallCommands.call_speak/4","type":"function"},{"doc":"Transcription start Start real-time transcription. Transcription will stop on call hang-up, or can be initiated via the Transcription stop command. Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call transcription_start_request (TranscriptionStartRequest): Transcription start request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_transcription_start/4","title":"TelnyxAPI.Api.CallCommands.call_transcription_start/4","type":"function"},{"doc":"Transcription stop Stop real-time transcription. Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call transcription_stop_request (TranscriptionStopRequest): Transcription stop request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_transcription_stop/4","title":"TelnyxAPI.Api.CallCommands.call_transcription_stop/4","type":"function"},{"doc":"Transfer call Transfer a call to a new destination. If the transfer is unsuccessful, a call.hangup webhook for the other call (Leg B) will be sent indicating that the transfer could not be completed. The original call will remain active and may be issued additional commands, potentially transfering the call to an alternate destination. Expected Webhooks: - call.initiated - call.bridged to Leg B - call.answered or call.hangup - call.machine.detection.ended if answering_machine_detection was requested - call.machine.greeting.ended if answering_machine_detection was set to detect_beep , greeting_end or detect_words Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call transfer_call_request (TransferCallRequest): Transfer call request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#call_transfer/4","title":"TelnyxAPI.Api.CallCommands.call_transfer/4","type":"function"},{"doc":"Update client state Updates client state Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call client_state_update_request (ClientStateUpdateRequest): Updates client state for every subsequent webhook opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#client_state_update/4","title":"TelnyxAPI.Api.CallCommands.client_state_update/4","type":"function"},{"doc":"Remove call from a queue Removes the call from a queue. Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call leave_queue_request (LeaveQueueRequest): Removes the call from the queue, the call currently is enqueued in. opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallCommands.html#leave_queue/4","title":"TelnyxAPI.Api.CallCommands.leave_queue/4","type":"function"},{"doc":"API calls for all endpoints tagged CallControlApplications .","ref":"TelnyxAPI.Api.CallControlApplications.html","title":"TelnyxAPI.Api.CallControlApplications","type":"module"},{"doc":"Create a call control application Create a call control application. Parameters connection (TelnyxAPI.Connection): Connection to server create_call_control_application_request (CreateCallControlApplicationRequest): Create call control application request. opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallControlApplications.html#create_call_control_application/3","title":"TelnyxAPI.Api.CallControlApplications.create_call_control_application/3","type":"function"},{"doc":"Delete a call control application Deletes a call control application. Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Identifies the resource. opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallControlApplications.html#delete_call_control_application/3","title":"TelnyxAPI.Api.CallControlApplications.delete_call_control_application/3","type":"function"},{"doc":"List call control applications Return a list of call control applications. Parameters connection (TelnyxAPI.Connection): Connection to server opts (KeywordList): [optional] Optional parameters :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page :filter_left_square_bracketapplication_name_right_square_bracket_left_square_bracketcontains_right_square_bracket (String.t): If present, applications with &lt;code&gt;application_name&lt;/code&gt; containing the given value will be returned. Matching is not case-sensitive. Requires at least three characters. :filter_left_square_bracketoutbound_periodoutbound_voice_profile_id_right_square_bracket (String.t): Identifies the associated outbound voice profile. :sort (String.t): Specifies the sort order for results. By default sorting direction is ascending. To have the results sorted in descending order add the &lt;code&gt; -&lt;/code&gt; prefix.&lt;br/&gt;&lt;br/&gt; That is: &lt;ul&gt; &lt;li&gt; &lt;code&gt;connection_name&lt;/code&gt;: sorts the result by the &lt;code&gt;connection_name&lt;/code&gt; field in ascending order. &lt;/li&gt; &lt;li&gt; &lt;code&gt;-connection_name&lt;/code&gt;: sorts the result by the &lt;code&gt;connection_name&lt;/code&gt; field in descending order. &lt;/li&gt; &lt;/ul&gt; &lt;br/&gt; If not given, results are sorted by &lt;code&gt;created_at&lt;/code&gt; in descending order. Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallControlApplications.html#list_call_control_applications/2","title":"TelnyxAPI.Api.CallControlApplications.list_call_control_applications/2","type":"function"},{"doc":"Retrieve a call control application Retrieves the details of an existing call control application. Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Identifies the resource. opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallControlApplications.html#retrieve_call_control_application/3","title":"TelnyxAPI.Api.CallControlApplications.retrieve_call_control_application/3","type":"function"},{"doc":"Update a call control application Updates settings of an existing call control application. Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Identifies the resource. update_call_control_application_request (UpdateCallControlApplicationRequest): Update call control application request. opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallControlApplications.html#update_call_control_application/4","title":"TelnyxAPI.Api.CallControlApplications.update_call_control_application/4","type":"function"},{"doc":"API calls for all endpoints tagged CallInformation .","ref":"TelnyxAPI.Api.CallInformation.html","title":"TelnyxAPI.Api.CallInformation","type":"module"},{"doc":"Retrieve a call status Returns the status of a call (data is available 10 minutes after call ended). Parameters connection (TelnyxAPI.Connection): Connection to server call_control_id (String.t): Unique identifier and token for controlling the call opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.CallInformation.html#retrieve_call_status/3","title":"TelnyxAPI.Api.CallInformation.retrieve_call_status/3","type":"function"},{"doc":"API calls for all endpoints tagged ConferenceCommands .","ref":"TelnyxAPI.Api.ConferenceCommands.html","title":"TelnyxAPI.Api.ConferenceCommands","type":"module"},{"doc":"Dial a new participant into a conference Dials a phone number and, when the call is answered, automatically joins them into the specified conference. Expected Webhooks: - call.hangup - call.answered - conference.participant.joined - conference.participant.left Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name conference_call_request (ConferenceCallRequest): Dial Into Conference request object opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_dial_participant_in/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_dial_participant_in/4","type":"function"},{"doc":"Hold conference participants Hold a list of participants in a conference call Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name conference_hold_request (ConferenceHoldRequest): opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_hold_participants/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_hold_participants/4","type":"function"},{"doc":"Join a conference Join an existing call leg to a conference. Issue the Join Conference command with the conference ID in the path and the call_control_id of the leg you wish to join to the conference as an attribute. The conference can have up to a certain amount of active participants, as set by the max_participants parameter in conference creation request. Expected Webhooks: - conference.participant.joined - conference.participant.left Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name join_conference_request (JoinConferenceRequest): Join Conference request object opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_join/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_join/4","type":"function"},{"doc":"Leave a conference Removes a call leg from a conference and moves it back to parked state. Expected Webhooks: - conference.participant.left Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name leave_conference_request (LeaveConferenceRequest): Leave Conference request object opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_leave/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_leave/4","type":"function"},{"doc":"Mute conference participants Mute a list of participants in a conference call Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name conference_mute_request (ConferenceMuteRequest): opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_mute_participants/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_mute_participants/4","type":"function"},{"doc":"Play audio to conference participants Play audio to all or some participants on a conference call. Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name conference_play_request (ConferencePlayRequest): opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_play_audio/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_play_audio/4","type":"function"},{"doc":"Speak text to conference participants Convert text to speech and play it to all or some participants. Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Specifies the conference by id or name conference_speak_request (ConferenceSpeakRequest): opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_speak_text/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_speak_text/4","type":"function"},{"doc":"Conference recording start Start recording the conference. Recording will stop on conference end, or via the Stop Recording command. Expected Webhooks: - conference.recording.saved Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Specifies the conference to record by id or name start_recording_request (StartRecordingRequest): opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_start_recording/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_start_recording/4","type":"function"},{"doc":"Stop audio being played on the conference Stop audio being played to all or some participants on a conference call. Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name conference_stop_request (ConferenceStopRequest): opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_stop_audio/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_stop_audio/4","type":"function"},{"doc":"Conference recording stop Stop recording the conference. Expected Webhooks: - conference.recording.saved Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Specifies the conference to stop the recording for by id or name stop_recording_request (StopRecordingRequest): Stop recording conference request opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_stop_recording/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_stop_recording/4","type":"function"},{"doc":"Unhold conference participants Unhold a list of participants in a conference call Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name conference_unhold_request (ConferenceUnholdRequest): opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_unhold_participants/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_unhold_participants/4","type":"function"},{"doc":"Unmute conference participants Unmute a list of participants in a conference call Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name conference_unmute_request (ConferenceUnmuteRequest): opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_unmute_participants/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_unmute_participants/4","type":"function"},{"doc":"Update conference participant Update conference participant supervisor_role Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id or name update_conference_request (UpdateConferenceRequest): Update Conference request object opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#conference_update/4","title":"TelnyxAPI.Api.ConferenceCommands.conference_update/4","type":"function"},{"doc":"Create conference Create a conference from an existing call leg using a call_control_id and a conference name. Upon creating the conference, the call will be automatically bridged to the conference. Conferences will expire after all participants have left the conference or after 4 hours regardless of the number of active participants. Expected Webhooks: - conference.created - conference.participant.joined - conference.participant.left - conference.ended - conference.recording.saved - conference.floor.changed Parameters connection (TelnyxAPI.Connection): Connection to server create_conference_request (CreateConferenceRequest): Create a conference opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#create_conference/3","title":"TelnyxAPI.Api.ConferenceCommands.create_conference/3","type":"function"},{"doc":"List conference participants Lists conference participants Parameters connection (TelnyxAPI.Connection): Connection to server conference_id (String.t): Uniquely identifies the conference by id opts (KeywordList): [optional] Optional parameters :filter_left_square_bracketmuted_right_square_bracket (boolean()): If present, participants will be filtered to those who are/are not muted :filter_left_square_bracketon_hold_right_square_bracket (boolean()): If present, participants will be filtered to those who are/are not put on hold :filter_left_square_bracketwhispering_right_square_bracket (boolean()): If present, participants will be filtered to those who are whispering or are not :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#list_conference_participants/3","title":"TelnyxAPI.Api.ConferenceCommands.list_conference_participants/3","type":"function"},{"doc":"List conferences Lists conferences. Conferences are created on demand, and will expire after all participants have left the conference or after 4 hours regardless of the number of active participants. Conferences are listed in descending order by expires_at . Parameters connection (TelnyxAPI.Connection): Connection to server opts (KeywordList): [optional] Optional parameters :filter_left_square_bracketname_right_square_bracket (String.t): If present, conferences will be filtered to those with a matching name attribute. Matching is case-sensitive :filter_left_square_bracketstatus_right_square_bracket (String.t): If present, conferences will be filtered by status. :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#list_conferences/2","title":"TelnyxAPI.Api.ConferenceCommands.list_conferences/2","type":"function"},{"doc":"Retrieve a conference Retrieve an existing conference Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the conference by id opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.ConferenceCommands.html#retrieve_conference/3","title":"TelnyxAPI.Api.ConferenceCommands.retrieve_conference/3","type":"function"},{"doc":"API calls for all endpoints tagged Debugging .","ref":"TelnyxAPI.Api.Debugging.html","title":"TelnyxAPI.Api.Debugging","type":"module"},{"doc":"List call events Filters call events by given filter parameters. Events are ordered by event_timestamp . If filter for call_leg_id or call_session_id is not present, it only filters events from the last 24 hours. Note : Only one filter[event_timestamp] can be passed. Parameters connection (TelnyxAPI.Connection): Connection to server opts (KeywordList): [optional] Optional parameters :filter_left_square_bracketcall_leg_id_right_square_bracket (String.t): The unique identifier of an individual call leg. :filter_left_square_bracketcall_session_id_right_square_bracket (String.t): The unique identifier of the call control session. A session may include multiple call leg events. :filter_left_square_bracketstatus_right_square_bracket (String.t): Event status :filter_left_square_brackettype_right_square_bracket (String.t): Event type :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketgt_right_square_bracket (String.t): Event timestamp: greater than :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketgte_right_square_bracket (String.t): Event timestamp: greater than or equal :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketlt_right_square_bracket (String.t): Event timestamp: lower than :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketlte_right_square_bracket (String.t): Event timestamp: lower than or equal :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketeq_right_square_bracket (String.t): Event timestamp: equal :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.Debugging.html#list_call_events/2","title":"TelnyxAPI.Api.Debugging.list_call_events/2","type":"function"},{"doc":"API calls for all endpoints tagged QueueCommands .","ref":"TelnyxAPI.Api.QueueCommands.html","title":"TelnyxAPI.Api.QueueCommands","type":"module"},{"doc":"Retrieve calls from a queue Retrieve the list of calls in an existing queue Parameters connection (TelnyxAPI.Connection): Connection to server queue_name (String.t): Uniquely identifies the queue by name opts (KeywordList): [optional] Optional parameters :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.QueueCommands.html#list_queue_calls/3","title":"TelnyxAPI.Api.QueueCommands.list_queue_calls/3","type":"function"},{"doc":"Retrieve a call from a queue Retrieve an existing call from an existing queue Parameters connection (TelnyxAPI.Connection): Connection to server queue_name (String.t): Uniquely identifies the queue by name call_control_id (String.t): Unique identifier and token for controlling the call opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.QueueCommands.html#retrieve_call_from_queue/4","title":"TelnyxAPI.Api.QueueCommands.retrieve_call_from_queue/4","type":"function"},{"doc":"Retrieve a call queue Retrieve an existing call queue Parameters connection (TelnyxAPI.Connection): Connection to server queue_name (String.t): Uniquely identifies the queue by name opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.QueueCommands.html#retrieve_call_queue/3","title":"TelnyxAPI.Api.QueueCommands.retrieve_call_queue/3","type":"function"},{"doc":"API calls for all endpoints tagged RecordingsCommands .","ref":"TelnyxAPI.Api.RecordingsCommands.html","title":"TelnyxAPI.Api.RecordingsCommands","type":"module"},{"doc":"List recordings Lists recordings for the authenticated user Parameters connection (TelnyxAPI.Connection): Connection to server opts (KeywordList): [optional] Optional parameters :filter_left_square_bracketconference_id_right_square_bracket (String.t): Return only recordings associated with a given conference :filter_left_square_bracketcreated_at_right_square_bracket_left_square_bracketgte_right_square_bracket (String.t): Return only recordings created later than or at given ISO 8601 datetime :filter_left_square_bracketcreated_at_right_square_bracket_left_square_bracketlte_right_square_bracket (String.t): Return only recordings created earlier than or at given ISO 8601 datetime :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.RecordingsCommands.html#list_recordings/2","title":"TelnyxAPI.Api.RecordingsCommands.list_recordings/2","type":"function"},{"doc":"Retrieve a recording Retrieve a recording from the authenticated user's recordings Parameters connection (TelnyxAPI.Connection): Connection to server id (String.t): Uniquely identifies the recording opts (KeywordList): [optional] Optional parameters Returns on success {:error, Tesla.Env.t} on failure","ref":"TelnyxAPI.Api.RecordingsCommands.html#retrieve_recording/3","title":"TelnyxAPI.Api.RecordingsCommands.retrieve_recording/3","type":"function"},{"doc":"Handle Tesla connections for TelnyxAPI.","ref":"TelnyxAPI.Connection.html","title":"TelnyxAPI.Connection","type":"module"},{"doc":"Perform a DELETE request. See request/1 or request/2 for options definition. delete ( &quot;/users&quot; ) delete ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; ) delete ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#delete/3","title":"TelnyxAPI.Connection.delete/3","type":"function"},{"doc":"Perform a DELETE request. See request!/1 or request!/2 for options definition. delete! ( &quot;/users&quot; ) delete! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; ) delete! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) delete! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#delete!/3","title":"TelnyxAPI.Connection.delete!/3","type":"function"},{"doc":"Perform a GET request. See request/1 or request/2 for options definition. get ( &quot;/users&quot; ) get ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; ) get ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#get/3","title":"TelnyxAPI.Connection.get/3","type":"function"},{"doc":"Perform a GET request. See request!/1 or request!/2 for options definition. get! ( &quot;/users&quot; ) get! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; ) get! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) get! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#get!/3","title":"TelnyxAPI.Connection.get!/3","type":"function"},{"doc":"Perform a HEAD request. See request/1 or request/2 for options definition. head ( &quot;/users&quot; ) head ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; ) head ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#head/3","title":"TelnyxAPI.Connection.head/3","type":"function"},{"doc":"Perform a HEAD request. See request!/1 or request!/2 for options definition. head! ( &quot;/users&quot; ) head! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; ) head! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) head! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#head!/3","title":"TelnyxAPI.Connection.head!/3","type":"function"},{"doc":"Configure an authless client connection Returns Tesla.Env.client","ref":"TelnyxAPI.Connection.html#new/0","title":"TelnyxAPI.Connection.new/0","type":"function"},{"doc":"Configure a client connection using Basic authentication. Parameters username (String): Username used for authentication password (String): Password used for authentication Returns Tesla.Env.client","ref":"TelnyxAPI.Connection.html#new/2","title":"TelnyxAPI.Connection.new/2","type":"function"},{"doc":"Perform a OPTIONS request. See request/1 or request/2 for options definition. options ( &quot;/users&quot; ) options ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; ) options ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#options/3","title":"TelnyxAPI.Connection.options/3","type":"function"},{"doc":"Perform a OPTIONS request. See request!/1 or request!/2 for options definition. options! ( &quot;/users&quot; ) options! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; ) options! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) options! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#options!/3","title":"TelnyxAPI.Connection.options!/3","type":"function"},{"doc":"Perform a PATCH request. See request/1 or request/2 for options definition. patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"TelnyxAPI.Connection.html#patch/4","title":"TelnyxAPI.Connection.patch/4","type":"function"},{"doc":"Perform a PATCH request. See request!/1 or request!/2 for options definition. patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) patch! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"TelnyxAPI.Connection.html#patch!/4","title":"TelnyxAPI.Connection.patch!/4","type":"function"},{"doc":"Perform a POST request. See request/1 or request/2 for options definition. post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"TelnyxAPI.Connection.html#post/4","title":"TelnyxAPI.Connection.post/4","type":"function"},{"doc":"Perform a POST request. See request!/1 or request!/2 for options definition. post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) post! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"TelnyxAPI.Connection.html#post!/4","title":"TelnyxAPI.Connection.post!/4","type":"function"},{"doc":"Perform a PUT request. See request/1 or request/2 for options definition. put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"TelnyxAPI.Connection.html#put/4","title":"TelnyxAPI.Connection.put/4","type":"function"},{"doc":"Perform a PUT request. See request!/1 or request!/2 for options definition. put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } ) put! ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } , query : [ scope : &quot;admin&quot; ] )","ref":"TelnyxAPI.Connection.html#put!/4","title":"TelnyxAPI.Connection.put!/4","type":"function"},{"doc":"Perform a request. Options :method - the request method, one of [ :head , :get , :delete , :trace , :options , :post , :put , :patch ] :url - either full url e.g. &quot; http://example.com/some/path&quot; or just &quot;/some/path&quot; if using Tesla.Middleware.BaseUrl :query - a keyword list of query params, e.g. [page: 1, per_page: 100] :headers - a keyworld list of headers, e.g. [{&quot;content-type&quot;, &quot;text/plain&quot;}] :body - depends on used middleware: by default it can be a binary if using e.g. JSON encoding middleware it can be a nested map if adapter supports it it can be a Stream with any of the above :opts - custom, per-request middleware or adapter options Examples ExampleApi . request ( method : :get , url : &quot;/users/path&quot; ) # use shortcut methods ExampleApi . get ( &quot;/users/1&quot; ) ExampleApi . post ( client , &quot;/users&quot; , %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#request/2","title":"TelnyxAPI.Connection.request/2","type":"function"},{"doc":"Perform request and raise in case of error. This is similar to request/2 behaviour from Tesla 0.x See request/2 for list of available options.","ref":"TelnyxAPI.Connection.html#request!/2","title":"TelnyxAPI.Connection.request!/2","type":"function"},{"doc":"Perform a TRACE request. See request/1 or request/2 for options definition. trace ( &quot;/users&quot; ) trace ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; ) trace ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#trace/3","title":"TelnyxAPI.Connection.trace/3","type":"function"},{"doc":"Perform a TRACE request. See request!/1 or request!/2 for options definition. trace! ( &quot;/users&quot; ) trace! ( &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; ) trace! ( client , &quot;/users&quot; , query : [ scope : &quot;admin&quot; ] ) trace! ( client , &quot;/users&quot; , body : %{ name : &quot;Jon&quot; } )","ref":"TelnyxAPI.Connection.html#trace!/3","title":"TelnyxAPI.Connection.trace!/3","type":"function"},{"doc":"Options that may be passed to a request function. See request/2 for detailed descriptions.","ref":"TelnyxAPI.Connection.html#t:option/0","title":"TelnyxAPI.Connection.option/0","type":"type"},{"doc":"Helper functions for deserializing responses into models","ref":"TelnyxAPI.Deserializer.html","title":"TelnyxAPI.Deserializer","type":"module"},{"doc":"Update the provided model with a deserialization of a nested value","ref":"TelnyxAPI.Deserializer.html#deserialize/5","title":"TelnyxAPI.Deserializer.deserialize/5","type":"function"},{"doc":"","ref":"TelnyxAPI.Model.AnswerRequest.html","title":"TelnyxAPI.Model.AnswerRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.AnswerRequest.html#t:t/0","title":"TelnyxAPI.Model.AnswerRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.BridgeRequest.html","title":"TelnyxAPI.Model.BridgeRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.BridgeRequest.html#t:t/0","title":"TelnyxAPI.Model.BridgeRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Call.html","title":"TelnyxAPI.Model.Call","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Call.html#t:t/0","title":"TelnyxAPI.Model.Call.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallAnswered.html","title":"TelnyxAPI.Model.CallAnswered","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallAnswered.html#t:t/0","title":"TelnyxAPI.Model.CallAnswered.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallAnsweredEvent.html","title":"TelnyxAPI.Model.CallAnsweredEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallAnsweredEvent.html#t:t/0","title":"TelnyxAPI.Model.CallAnsweredEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallAnsweredPayload.html","title":"TelnyxAPI.Model.CallAnsweredPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallAnsweredPayload.html#t:t/0","title":"TelnyxAPI.Model.CallAnsweredPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallBridged.html","title":"TelnyxAPI.Model.CallBridged","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallBridged.html#t:t/0","title":"TelnyxAPI.Model.CallBridged.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallBridgedEvent.html","title":"TelnyxAPI.Model.CallBridgedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallBridgedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallBridgedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallBridgedPayload.html","title":"TelnyxAPI.Model.CallBridgedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallBridgedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallBridgedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallControlApplication.html","title":"TelnyxAPI.Model.CallControlApplication","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallControlApplication.html#t:t/0","title":"TelnyxAPI.Model.CallControlApplication.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallControlApplicationInbound.html","title":"TelnyxAPI.Model.CallControlApplicationInbound","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallControlApplicationInbound.html#t:t/0","title":"TelnyxAPI.Model.CallControlApplicationInbound.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallControlApplicationOutbound.html","title":"TelnyxAPI.Model.CallControlApplicationOutbound","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallControlApplicationOutbound.html#t:t/0","title":"TelnyxAPI.Model.CallControlApplicationOutbound.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallControlApplicationResponse.html","title":"TelnyxAPI.Model.CallControlApplicationResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallControlApplicationResponse.html#t:t/0","title":"TelnyxAPI.Model.CallControlApplicationResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallControlCommandResponse.html","title":"TelnyxAPI.Model.CallControlCommandResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallControlCommandResponse.html#t:t/0","title":"TelnyxAPI.Model.CallControlCommandResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallControlCommandResult.html","title":"TelnyxAPI.Model.CallControlCommandResult","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallControlCommandResult.html#t:t/0","title":"TelnyxAPI.Model.CallControlCommandResult.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallDtmfReceived.html","title":"TelnyxAPI.Model.CallDtmfReceived","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallDtmfReceived.html#t:t/0","title":"TelnyxAPI.Model.CallDtmfReceived.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallDtmfReceivedEvent.html","title":"TelnyxAPI.Model.CallDtmfReceivedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallDtmfReceivedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallDtmfReceivedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallDtmfReceivedPayload.html","title":"TelnyxAPI.Model.CallDtmfReceivedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallDtmfReceivedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallDtmfReceivedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallEnqueued.html","title":"TelnyxAPI.Model.CallEnqueued","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallEnqueued.html#t:t/0","title":"TelnyxAPI.Model.CallEnqueued.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallEnqueuedEvent.html","title":"TelnyxAPI.Model.CallEnqueuedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallEnqueuedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallEnqueuedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallEnqueuedPayload.html","title":"TelnyxAPI.Model.CallEnqueuedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallEnqueuedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallEnqueuedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallEvent.html","title":"TelnyxAPI.Model.CallEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallEvent.html#t:t/0","title":"TelnyxAPI.Model.CallEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStarted.html","title":"TelnyxAPI.Model.CallForkStarted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStarted.html#t:t/0","title":"TelnyxAPI.Model.CallForkStarted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStartedEvent.html","title":"TelnyxAPI.Model.CallForkStartedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStartedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallForkStartedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStartedPayload.html","title":"TelnyxAPI.Model.CallForkStartedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStartedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallForkStartedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStopped.html","title":"TelnyxAPI.Model.CallForkStopped","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStopped.html#t:t/0","title":"TelnyxAPI.Model.CallForkStopped.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStoppedEvent.html","title":"TelnyxAPI.Model.CallForkStoppedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallForkStoppedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallForkStoppedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallGatherEnded.html","title":"TelnyxAPI.Model.CallGatherEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallGatherEnded.html#t:t/0","title":"TelnyxAPI.Model.CallGatherEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallGatherEndedEvent.html","title":"TelnyxAPI.Model.CallGatherEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallGatherEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallGatherEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallGatherEndedPayload.html","title":"TelnyxAPI.Model.CallGatherEndedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallGatherEndedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallGatherEndedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallHangup.html","title":"TelnyxAPI.Model.CallHangup","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallHangup.html#t:t/0","title":"TelnyxAPI.Model.CallHangup.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallHangupEvent.html","title":"TelnyxAPI.Model.CallHangupEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallHangupEvent.html#t:t/0","title":"TelnyxAPI.Model.CallHangupEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallHangupPayload.html","title":"TelnyxAPI.Model.CallHangupPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallHangupPayload.html#t:t/0","title":"TelnyxAPI.Model.CallHangupPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallInitiated.html","title":"TelnyxAPI.Model.CallInitiated","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallInitiated.html#t:t/0","title":"TelnyxAPI.Model.CallInitiated.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallInitiatedEvent.html","title":"TelnyxAPI.Model.CallInitiatedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallInitiatedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallInitiatedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallInitiatedPayload.html","title":"TelnyxAPI.Model.CallInitiatedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallInitiatedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallInitiatedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallLeftQueue.html","title":"TelnyxAPI.Model.CallLeftQueue","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallLeftQueue.html#t:t/0","title":"TelnyxAPI.Model.CallLeftQueue.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallLeftQueueEvent.html","title":"TelnyxAPI.Model.CallLeftQueueEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallLeftQueueEvent.html#t:t/0","title":"TelnyxAPI.Model.CallLeftQueueEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallLeftQueuePayload.html","title":"TelnyxAPI.Model.CallLeftQueuePayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallLeftQueuePayload.html#t:t/0","title":"TelnyxAPI.Model.CallLeftQueuePayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineDetectionEnded.html","title":"TelnyxAPI.Model.CallMachineDetectionEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineDetectionEnded.html#t:t/0","title":"TelnyxAPI.Model.CallMachineDetectionEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineDetectionEndedEvent.html","title":"TelnyxAPI.Model.CallMachineDetectionEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineDetectionEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallMachineDetectionEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineDetectionEndedPayload.html","title":"TelnyxAPI.Model.CallMachineDetectionEndedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineDetectionEndedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallMachineDetectionEndedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineGreetingEnded.html","title":"TelnyxAPI.Model.CallMachineGreetingEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineGreetingEnded.html#t:t/0","title":"TelnyxAPI.Model.CallMachineGreetingEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineGreetingEndedEvent.html","title":"TelnyxAPI.Model.CallMachineGreetingEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineGreetingEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallMachineGreetingEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineGreetingEndedPayload.html","title":"TelnyxAPI.Model.CallMachineGreetingEndedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallMachineGreetingEndedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallMachineGreetingEndedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackEnded.html","title":"TelnyxAPI.Model.CallPlaybackEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackEnded.html#t:t/0","title":"TelnyxAPI.Model.CallPlaybackEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackEndedEvent.html","title":"TelnyxAPI.Model.CallPlaybackEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallPlaybackEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackEndedPayload.html","title":"TelnyxAPI.Model.CallPlaybackEndedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackEndedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallPlaybackEndedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackStarted.html","title":"TelnyxAPI.Model.CallPlaybackStarted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackStarted.html#t:t/0","title":"TelnyxAPI.Model.CallPlaybackStarted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackStartedEvent.html","title":"TelnyxAPI.Model.CallPlaybackStartedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackStartedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallPlaybackStartedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackStartedPayload.html","title":"TelnyxAPI.Model.CallPlaybackStartedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallPlaybackStartedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallPlaybackStartedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallRecordingSaved.html","title":"TelnyxAPI.Model.CallRecordingSaved","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallRecordingSaved.html#t:t/0","title":"TelnyxAPI.Model.CallRecordingSaved.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallRecordingSavedEvent.html","title":"TelnyxAPI.Model.CallRecordingSavedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallRecordingSavedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallRecordingSavedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallRecordingSavedPayload.html","title":"TelnyxAPI.Model.CallRecordingSavedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallRecordingSavedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallRecordingSavedPayload.t/0","type":"type"},{"doc":"Recording URLs in requested format. The URL is valid for as long as the file exists. For security purposes, this feature is activated on a per request basis. Please contact customer support with your Account ID to request activation.","ref":"TelnyxAPI.Model.CallRecordingSavedPayloadPublicRecordingUrls.html","title":"TelnyxAPI.Model.CallRecordingSavedPayloadPublicRecordingUrls","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallRecordingSavedPayloadPublicRecordingUrls.html#t:t/0","title":"TelnyxAPI.Model.CallRecordingSavedPayloadPublicRecordingUrls.t/0","type":"type"},{"doc":"Recording URLs in requested format. These URLs are valid for 10 minutes. After 10 minutes, you may retrieve recordings via API using Reports -&gt; Call Recordings documentation, or via Mission Control under Reporting -&gt; Recordings.","ref":"TelnyxAPI.Model.CallRecordingSavedPayloadRecordingUrls.html","title":"TelnyxAPI.Model.CallRecordingSavedPayloadRecordingUrls","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallRecordingSavedPayloadRecordingUrls.html#t:t/0","title":"TelnyxAPI.Model.CallRecordingSavedPayloadRecordingUrls.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferCompleted.html","title":"TelnyxAPI.Model.CallReferCompleted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferCompleted.html#t:t/0","title":"TelnyxAPI.Model.CallReferCompleted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferCompletedEvent.html","title":"TelnyxAPI.Model.CallReferCompletedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferCompletedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallReferCompletedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferCompletedPayload.html","title":"TelnyxAPI.Model.CallReferCompletedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferCompletedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallReferCompletedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferFailed.html","title":"TelnyxAPI.Model.CallReferFailed","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferFailed.html#t:t/0","title":"TelnyxAPI.Model.CallReferFailed.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferFailedEvent.html","title":"TelnyxAPI.Model.CallReferFailedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferFailedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallReferFailedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferFailedPayload.html","title":"TelnyxAPI.Model.CallReferFailedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferFailedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallReferFailedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferStarted.html","title":"TelnyxAPI.Model.CallReferStarted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferStarted.html#t:t/0","title":"TelnyxAPI.Model.CallReferStarted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferStartedEvent.html","title":"TelnyxAPI.Model.CallReferStartedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferStartedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallReferStartedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallReferStartedPayload.html","title":"TelnyxAPI.Model.CallReferStartedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallReferStartedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallReferStartedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallRequest.html","title":"TelnyxAPI.Model.CallRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallRequest.html#t:t/0","title":"TelnyxAPI.Model.CallRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakEnded.html","title":"TelnyxAPI.Model.CallSpeakEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakEnded.html#t:t/0","title":"TelnyxAPI.Model.CallSpeakEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakEndedEvent.html","title":"TelnyxAPI.Model.CallSpeakEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallSpeakEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakEndedPayload.html","title":"TelnyxAPI.Model.CallSpeakEndedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakEndedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallSpeakEndedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakStarted.html","title":"TelnyxAPI.Model.CallSpeakStarted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakStarted.html#t:t/0","title":"TelnyxAPI.Model.CallSpeakStarted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakStartedEvent.html","title":"TelnyxAPI.Model.CallSpeakStartedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakStartedEvent.html#t:t/0","title":"TelnyxAPI.Model.CallSpeakStartedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakStartedPayload.html","title":"TelnyxAPI.Model.CallSpeakStartedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CallSpeakStartedPayload.html#t:t/0","title":"TelnyxAPI.Model.CallSpeakStartedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ClientStateUpdateRequest.html","title":"TelnyxAPI.Model.ClientStateUpdateRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ClientStateUpdateRequest.html#t:t/0","title":"TelnyxAPI.Model.ClientStateUpdateRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Conference.html","title":"TelnyxAPI.Model.Conference","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Conference.html#t:t/0","title":"TelnyxAPI.Model.Conference.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCallRequest.html","title":"TelnyxAPI.Model.ConferenceCallRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCallRequest.html#t:t/0","title":"TelnyxAPI.Model.ConferenceCallRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCommandResponse.html","title":"TelnyxAPI.Model.ConferenceCommandResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCommandResponse.html#t:t/0","title":"TelnyxAPI.Model.ConferenceCommandResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCommandResult.html","title":"TelnyxAPI.Model.ConferenceCommandResult","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCommandResult.html#t:t/0","title":"TelnyxAPI.Model.ConferenceCommandResult.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCreated.html","title":"TelnyxAPI.Model.ConferenceCreated","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCreated.html#t:t/0","title":"TelnyxAPI.Model.ConferenceCreated.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCreatedEvent.html","title":"TelnyxAPI.Model.ConferenceCreatedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCreatedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceCreatedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCreatedPayload.html","title":"TelnyxAPI.Model.ConferenceCreatedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceCreatedPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferenceCreatedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceEnded.html","title":"TelnyxAPI.Model.ConferenceEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceEnded.html#t:t/0","title":"TelnyxAPI.Model.ConferenceEnded.t/0","type":"type"},{"doc":"IDs related to who ended the conference. It is expected for them to all be there or all be null","ref":"TelnyxAPI.Model.ConferenceEndedBy.html","title":"TelnyxAPI.Model.ConferenceEndedBy","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceEndedBy.html#t:t/0","title":"TelnyxAPI.Model.ConferenceEndedBy.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceEndedEvent.html","title":"TelnyxAPI.Model.ConferenceEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceEndedPayload.html","title":"TelnyxAPI.Model.ConferenceEndedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceEndedPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferenceEndedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceFloorChangedEvent.html","title":"TelnyxAPI.Model.ConferenceFloorChangedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceFloorChangedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceFloorChangedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceFloorChangedEventPayload.html","title":"TelnyxAPI.Model.ConferenceFloorChangedEventPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceFloorChangedEventPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferenceFloorChangedEventPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceHoldRequest.html","title":"TelnyxAPI.Model.ConferenceHoldRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceHoldRequest.html#t:t/0","title":"TelnyxAPI.Model.ConferenceHoldRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceMuteRequest.html","title":"TelnyxAPI.Model.ConferenceMuteRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceMuteRequest.html#t:t/0","title":"TelnyxAPI.Model.ConferenceMuteRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantJoined.html","title":"TelnyxAPI.Model.ConferenceParticipantJoined","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantJoined.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantJoined.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantJoinedEvent.html","title":"TelnyxAPI.Model.ConferenceParticipantJoinedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantJoinedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantJoinedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantJoinedPayload.html","title":"TelnyxAPI.Model.ConferenceParticipantJoinedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantJoinedPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantJoinedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantLeft.html","title":"TelnyxAPI.Model.ConferenceParticipantLeft","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantLeft.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantLeft.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantLeftEvent.html","title":"TelnyxAPI.Model.ConferenceParticipantLeftEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantLeftEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantLeftEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackEnded.html","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackEnded.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackEndedEvent.html","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackStarted.html","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackStarted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackStarted.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackStarted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackStartedEvent.html","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackStartedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackStartedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackStartedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackStartedPayload.html","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackStartedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantPlaybackStartedPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantPlaybackStartedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakEnded.html","title":"TelnyxAPI.Model.ConferenceParticipantSpeakEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakEnded.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantSpeakEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakEndedEvent.html","title":"TelnyxAPI.Model.ConferenceParticipantSpeakEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantSpeakEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakStarted.html","title":"TelnyxAPI.Model.ConferenceParticipantSpeakStarted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakStarted.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantSpeakStarted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakStartedEvent.html","title":"TelnyxAPI.Model.ConferenceParticipantSpeakStartedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakStartedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantSpeakStartedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakStartedPayload.html","title":"TelnyxAPI.Model.ConferenceParticipantSpeakStartedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceParticipantSpeakStartedPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferenceParticipantSpeakStartedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlayRequest.html","title":"TelnyxAPI.Model.ConferencePlayRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlayRequest.html#t:t/0","title":"TelnyxAPI.Model.ConferencePlayRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackEnded.html","title":"TelnyxAPI.Model.ConferencePlaybackEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackEnded.html#t:t/0","title":"TelnyxAPI.Model.ConferencePlaybackEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackEndedEvent.html","title":"TelnyxAPI.Model.ConferencePlaybackEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferencePlaybackEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackStarted.html","title":"TelnyxAPI.Model.ConferencePlaybackStarted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackStarted.html#t:t/0","title":"TelnyxAPI.Model.ConferencePlaybackStarted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackStartedEvent.html","title":"TelnyxAPI.Model.ConferencePlaybackStartedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackStartedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferencePlaybackStartedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackStartedPayload.html","title":"TelnyxAPI.Model.ConferencePlaybackStartedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferencePlaybackStartedPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferencePlaybackStartedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceRecordingSaved.html","title":"TelnyxAPI.Model.ConferenceRecordingSaved","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceRecordingSaved.html#t:t/0","title":"TelnyxAPI.Model.ConferenceRecordingSaved.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceRecordingSavedEvent.html","title":"TelnyxAPI.Model.ConferenceRecordingSavedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceRecordingSavedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceRecordingSavedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceRecordingSavedPayload.html","title":"TelnyxAPI.Model.ConferenceRecordingSavedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceRecordingSavedPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferenceRecordingSavedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceResponse.html","title":"TelnyxAPI.Model.ConferenceResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceResponse.html#t:t/0","title":"TelnyxAPI.Model.ConferenceResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakEnded.html","title":"TelnyxAPI.Model.ConferenceSpeakEnded","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakEnded.html#t:t/0","title":"TelnyxAPI.Model.ConferenceSpeakEnded.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakEndedEvent.html","title":"TelnyxAPI.Model.ConferenceSpeakEndedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakEndedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceSpeakEndedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakRequest.html","title":"TelnyxAPI.Model.ConferenceSpeakRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakRequest.html#t:t/0","title":"TelnyxAPI.Model.ConferenceSpeakRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakStarted.html","title":"TelnyxAPI.Model.ConferenceSpeakStarted","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakStarted.html#t:t/0","title":"TelnyxAPI.Model.ConferenceSpeakStarted.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakStartedEvent.html","title":"TelnyxAPI.Model.ConferenceSpeakStartedEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakStartedEvent.html#t:t/0","title":"TelnyxAPI.Model.ConferenceSpeakStartedEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakStartedPayload.html","title":"TelnyxAPI.Model.ConferenceSpeakStartedPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceSpeakStartedPayload.html#t:t/0","title":"TelnyxAPI.Model.ConferenceSpeakStartedPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceStopRequest.html","title":"TelnyxAPI.Model.ConferenceStopRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceStopRequest.html#t:t/0","title":"TelnyxAPI.Model.ConferenceStopRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceUnholdRequest.html","title":"TelnyxAPI.Model.ConferenceUnholdRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceUnholdRequest.html#t:t/0","title":"TelnyxAPI.Model.ConferenceUnholdRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceUnmuteRequest.html","title":"TelnyxAPI.Model.ConferenceUnmuteRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ConferenceUnmuteRequest.html#t:t/0","title":"TelnyxAPI.Model.ConferenceUnmuteRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CreateCallControlApplicationRequest.html","title":"TelnyxAPI.Model.CreateCallControlApplicationRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CreateCallControlApplicationRequest.html#t:t/0","title":"TelnyxAPI.Model.CreateCallControlApplicationRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CreateConferenceRequest.html","title":"TelnyxAPI.Model.CreateConferenceRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CreateConferenceRequest.html#t:t/0","title":"TelnyxAPI.Model.CreateConferenceRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.CustomSipHeader.html","title":"TelnyxAPI.Model.CustomSipHeader","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.CustomSipHeader.html#t:t/0","title":"TelnyxAPI.Model.CustomSipHeader.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.EnqueueRequest.html","title":"TelnyxAPI.Model.EnqueueRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.EnqueueRequest.html#t:t/0","title":"TelnyxAPI.Model.EnqueueRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Error.html","title":"TelnyxAPI.Model.Error","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Error.html#t:t/0","title":"TelnyxAPI.Model.Error.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ErrorSource.html","title":"TelnyxAPI.Model.ErrorSource","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ErrorSource.html#t:t/0","title":"TelnyxAPI.Model.ErrorSource.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Errors.html","title":"TelnyxAPI.Model.Errors","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Errors.html#t:t/0","title":"TelnyxAPI.Model.Errors.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.GatherUsingAudioRequest.html","title":"TelnyxAPI.Model.GatherUsingAudioRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.GatherUsingAudioRequest.html#t:t/0","title":"TelnyxAPI.Model.GatherUsingAudioRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.GatherUsingSpeakRequest.html","title":"TelnyxAPI.Model.GatherUsingSpeakRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.GatherUsingSpeakRequest.html#t:t/0","title":"TelnyxAPI.Model.GatherUsingSpeakRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.GetRecordingResponse.html","title":"TelnyxAPI.Model.GetRecordingResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.GetRecordingResponse.html#t:t/0","title":"TelnyxAPI.Model.GetRecordingResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.HangupRequest.html","title":"TelnyxAPI.Model.HangupRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.HangupRequest.html#t:t/0","title":"TelnyxAPI.Model.HangupRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.JoinConferenceRequest.html","title":"TelnyxAPI.Model.JoinConferenceRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.JoinConferenceRequest.html#t:t/0","title":"TelnyxAPI.Model.JoinConferenceRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.LeaveConferenceRequest.html","title":"TelnyxAPI.Model.LeaveConferenceRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.LeaveConferenceRequest.html#t:t/0","title":"TelnyxAPI.Model.LeaveConferenceRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.LeaveQueueRequest.html","title":"TelnyxAPI.Model.LeaveQueueRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.LeaveQueueRequest.html#t:t/0","title":"TelnyxAPI.Model.LeaveQueueRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ListCallControlApplicationsResponse.html","title":"TelnyxAPI.Model.ListCallControlApplicationsResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ListCallControlApplicationsResponse.html#t:t/0","title":"TelnyxAPI.Model.ListCallControlApplicationsResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ListCallEventsResponse.html","title":"TelnyxAPI.Model.ListCallEventsResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ListCallEventsResponse.html#t:t/0","title":"TelnyxAPI.Model.ListCallEventsResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ListConferencesResponse.html","title":"TelnyxAPI.Model.ListConferencesResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ListConferencesResponse.html#t:t/0","title":"TelnyxAPI.Model.ListConferencesResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ListParticipantsResponse.html","title":"TelnyxAPI.Model.ListParticipantsResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ListParticipantsResponse.html#t:t/0","title":"TelnyxAPI.Model.ListParticipantsResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ListQueueCallsResponse.html","title":"TelnyxAPI.Model.ListQueueCallsResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ListQueueCallsResponse.html#t:t/0","title":"TelnyxAPI.Model.ListQueueCallsResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ListRecordingsResponse.html","title":"TelnyxAPI.Model.ListRecordingsResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ListRecordingsResponse.html#t:t/0","title":"TelnyxAPI.Model.ListRecordingsResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Loopcount.html","title":"TelnyxAPI.Model.Loopcount","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Loopcount.html#t:t/0","title":"TelnyxAPI.Model.Loopcount.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.PaginationMeta.html","title":"TelnyxAPI.Model.PaginationMeta","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.PaginationMeta.html#t:t/0","title":"TelnyxAPI.Model.PaginationMeta.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Participant.html","title":"TelnyxAPI.Model.Participant","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Participant.html#t:t/0","title":"TelnyxAPI.Model.Participant.t/0","type":"type"},{"doc":"Info about the conference that the participant is in","ref":"TelnyxAPI.Model.ParticipantConference.html","title":"TelnyxAPI.Model.ParticipantConference","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ParticipantConference.html#t:t/0","title":"TelnyxAPI.Model.ParticipantConference.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.PauseRecordingRequest.html","title":"TelnyxAPI.Model.PauseRecordingRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.PauseRecordingRequest.html#t:t/0","title":"TelnyxAPI.Model.PauseRecordingRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.PlayAudioUrlRequest.html","title":"TelnyxAPI.Model.PlayAudioUrlRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.PlayAudioUrlRequest.html#t:t/0","title":"TelnyxAPI.Model.PlayAudioUrlRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.PlaybackStopRequest.html","title":"TelnyxAPI.Model.PlaybackStopRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.PlaybackStopRequest.html#t:t/0","title":"TelnyxAPI.Model.PlaybackStopRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Queue.html","title":"TelnyxAPI.Model.Queue","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Queue.html#t:t/0","title":"TelnyxAPI.Model.Queue.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.QueueCall.html","title":"TelnyxAPI.Model.QueueCall","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.QueueCall.html#t:t/0","title":"TelnyxAPI.Model.QueueCall.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.QueueCallResponse.html","title":"TelnyxAPI.Model.QueueCallResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.QueueCallResponse.html#t:t/0","title":"TelnyxAPI.Model.QueueCallResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.QueueResponse.html","title":"TelnyxAPI.Model.QueueResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.QueueResponse.html#t:t/0","title":"TelnyxAPI.Model.QueueResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Recording.html","title":"TelnyxAPI.Model.Recording","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Recording.html#t:t/0","title":"TelnyxAPI.Model.Recording.t/0","type":"type"},{"doc":"The links to download the recording files","ref":"TelnyxAPI.Model.RecordingDownloadUrls.html","title":"TelnyxAPI.Model.RecordingDownloadUrls","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.RecordingDownloadUrls.html#t:t/0","title":"TelnyxAPI.Model.RecordingDownloadUrls.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ReferRequest.html","title":"TelnyxAPI.Model.ReferRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ReferRequest.html#t:t/0","title":"TelnyxAPI.Model.ReferRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.RejectRequest.html","title":"TelnyxAPI.Model.RejectRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.RejectRequest.html#t:t/0","title":"TelnyxAPI.Model.RejectRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.ResumeRecordingRequest.html","title":"TelnyxAPI.Model.ResumeRecordingRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.ResumeRecordingRequest.html#t:t/0","title":"TelnyxAPI.Model.ResumeRecordingRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.RetrieveCallStatusResponse.html","title":"TelnyxAPI.Model.RetrieveCallStatusResponse","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.RetrieveCallStatusResponse.html#t:t/0","title":"TelnyxAPI.Model.RetrieveCallStatusResponse.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.SendDtmfRequest.html","title":"TelnyxAPI.Model.SendDtmfRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.SendDtmfRequest.html#t:t/0","title":"TelnyxAPI.Model.SendDtmfRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.SpeakRequest.html","title":"TelnyxAPI.Model.SpeakRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.SpeakRequest.html#t:t/0","title":"TelnyxAPI.Model.SpeakRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.StartForkingRequest.html","title":"TelnyxAPI.Model.StartForkingRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.StartForkingRequest.html#t:t/0","title":"TelnyxAPI.Model.StartForkingRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.StartRecordingRequest.html","title":"TelnyxAPI.Model.StartRecordingRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.StartRecordingRequest.html#t:t/0","title":"TelnyxAPI.Model.StartRecordingRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.StopForkingRequest.html","title":"TelnyxAPI.Model.StopForkingRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.StopForkingRequest.html#t:t/0","title":"TelnyxAPI.Model.StopForkingRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.StopGatherRequest.html","title":"TelnyxAPI.Model.StopGatherRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.StopGatherRequest.html#t:t/0","title":"TelnyxAPI.Model.StopGatherRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.StopRecordingRequest.html","title":"TelnyxAPI.Model.StopRecordingRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.StopRecordingRequest.html#t:t/0","title":"TelnyxAPI.Model.StopRecordingRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.Transcription.html","title":"TelnyxAPI.Model.Transcription","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.Transcription.html#t:t/0","title":"TelnyxAPI.Model.Transcription.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionEvent.html","title":"TelnyxAPI.Model.TranscriptionEvent","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionEvent.html#t:t/0","title":"TelnyxAPI.Model.TranscriptionEvent.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionPayload.html","title":"TelnyxAPI.Model.TranscriptionPayload","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionPayload.html#t:t/0","title":"TelnyxAPI.Model.TranscriptionPayload.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionPayloadTranscriptionData.html","title":"TelnyxAPI.Model.TranscriptionPayloadTranscriptionData","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionPayloadTranscriptionData.html#t:t/0","title":"TelnyxAPI.Model.TranscriptionPayloadTranscriptionData.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionStartRequest.html","title":"TelnyxAPI.Model.TranscriptionStartRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionStartRequest.html#t:t/0","title":"TelnyxAPI.Model.TranscriptionStartRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionStopRequest.html","title":"TelnyxAPI.Model.TranscriptionStopRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.TranscriptionStopRequest.html#t:t/0","title":"TelnyxAPI.Model.TranscriptionStopRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.TransferCallRequest.html","title":"TelnyxAPI.Model.TransferCallRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.TransferCallRequest.html#t:t/0","title":"TelnyxAPI.Model.TransferCallRequest.t/0","type":"type"},{"doc":"Optional configuration parameters to modify 'answering_machine_detection' performance.","ref":"TelnyxAPI.Model.TransferCallRequestAnsweringMachineDetectionConfig.html","title":"TelnyxAPI.Model.TransferCallRequestAnsweringMachineDetectionConfig","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.TransferCallRequestAnsweringMachineDetectionConfig.html#t:t/0","title":"TelnyxAPI.Model.TransferCallRequestAnsweringMachineDetectionConfig.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.UpdateCallControlApplicationRequest.html","title":"TelnyxAPI.Model.UpdateCallControlApplicationRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.UpdateCallControlApplicationRequest.html#t:t/0","title":"TelnyxAPI.Model.UpdateCallControlApplicationRequest.t/0","type":"type"},{"doc":"","ref":"TelnyxAPI.Model.UpdateConferenceRequest.html","title":"TelnyxAPI.Model.UpdateConferenceRequest","type":"module"},{"doc":"","ref":"TelnyxAPI.Model.UpdateConferenceRequest.html#t:t/0","title":"TelnyxAPI.Model.UpdateConferenceRequest.t/0","type":"type"},{"doc":"Helper functions for building Tesla requests","ref":"TelnyxAPI.RequestBuilder.html","title":"TelnyxAPI.RequestBuilder","type":"module"},{"doc":"Add optional parameters to the request Parameters request (Map) - Collected request options definitions (Map) - Map of parameter name to parameter location. options (KeywordList) - The provided optional parameters Returns Map","ref":"TelnyxAPI.RequestBuilder.html#add_optional_params/3","title":"TelnyxAPI.RequestBuilder.add_optional_params/3","type":"function"},{"doc":"Add optional parameters to the request Parameters request (Map) - Collected request options location (atom) - Where to put the parameter key (atom) - The name of the parameter value (any) - The value of the parameter Returns Map","ref":"TelnyxAPI.RequestBuilder.html#add_param/4","title":"TelnyxAPI.RequestBuilder.add_param/4","type":"function"},{"doc":"Handle the response for a Tesla request Parameters arg1 (Tesla.Env.t | term) - The response object arg2 (:false | struct | [struct]) - The shape of the struct to deserialize into Returns on success {:error, term} on failure","ref":"TelnyxAPI.RequestBuilder.html#decode/2","title":"TelnyxAPI.RequestBuilder.decode/2","type":"function"},{"doc":"Due to a bug in httpc, POST, PATCH and PUT requests will fail, if the body is empty This function will ensure, that the body param is always set Parameters request (Map) - Collected request options Returns Map","ref":"TelnyxAPI.RequestBuilder.html#ensure_body/1","title":"TelnyxAPI.RequestBuilder.ensure_body/1","type":"function"},{"doc":"","ref":"TelnyxAPI.RequestBuilder.html#evaluate_response/2","title":"TelnyxAPI.RequestBuilder.evaluate_response/2","type":"function"},{"doc":"Specify the request method when building a request Parameters request (Map) - Collected request options m (atom) - Request method Returns Map","ref":"TelnyxAPI.RequestBuilder.html#method/2","title":"TelnyxAPI.RequestBuilder.method/2","type":"function"},{"doc":"","ref":"TelnyxAPI.RequestBuilder.html#resolve_mapping/3","title":"TelnyxAPI.RequestBuilder.resolve_mapping/3","type":"function"},{"doc":"Specify the request method when building a request Parameters request (Map) - Collected request options u (String) - Request URL Returns Map","ref":"TelnyxAPI.RequestBuilder.html#url/2","title":"TelnyxAPI.RequestBuilder.url/2","type":"function"}]