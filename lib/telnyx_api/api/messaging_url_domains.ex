# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule TelnyxAPI.Api.MessagingURLDomains do
  @moduledoc """
  API calls for all endpoints tagged `MessagingURLDomains`.
  """

  alias TelnyxAPI.Connection
  import TelnyxAPI.RequestBuilder


  @doc """
  List messaging URL domains

  ## Parameters

  - connection (TelnyxAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load
    - :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page
  ## Returns

  {:ok, TelnyxAPI.Model.ListMessagingProfileUrlDomainsResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec list_messaging_url_domains(Tesla.Env.client, keyword()) :: {:ok, TelnyxAPI.Model.ListMessagingProfileUrlDomainsResponse.t} | {:ok, TelnyxAPI.Model.Errors.t} | {:error, Tesla.Env.t}
  def list_messaging_url_domains(connection, opts \\ []) do
    optional_params = %{
      :"page[number]" => :query,
      :"page[size]" => :query
    }
    %{}
    |> method(:get)
    |> url("/messaging_url_domains")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %TelnyxAPI.Model.ListMessagingProfileUrlDomainsResponse{}},
      { :default, %TelnyxAPI.Model.Errors{}}
    ])
  end
end
