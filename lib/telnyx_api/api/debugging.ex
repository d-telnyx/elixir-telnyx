# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule TelnyxAPI.Api.Debugging do
  @moduledoc """
  API calls for all endpoints tagged `Debugging`.
  """

  alias TelnyxAPI.Connection
  import TelnyxAPI.RequestBuilder


  @doc """
  List call events
  Filters call events by given filter parameters. Events are ordered by `event_timestamp`. If filter for `call_leg_id` or `call_session_id` is not present, it only filters events from the last 24 hours.  **Note**: Only one `filter[event_timestamp]` can be passed. 

  ## Parameters

  - connection (TelnyxAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :filter_left_square_bracketcall_leg_id_right_square_bracket (String.t): The unique identifier of an individual call leg.
    - :filter_left_square_bracketcall_session_id_right_square_bracket (String.t): The unique identifier of the call control session. A session may include multiple call leg events.
    - :filter_left_square_bracketstatus_right_square_bracket (String.t): Event status
    - :filter_left_square_brackettype_right_square_bracket (String.t): Event type
    - :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketgt_right_square_bracket (String.t): Event timestamp: greater than
    - :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketgte_right_square_bracket (String.t): Event timestamp: greater than or equal
    - :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketlt_right_square_bracket (String.t): Event timestamp: lower than
    - :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketlte_right_square_bracket (String.t): Event timestamp: lower than or equal
    - :filter_left_square_bracketevent_timestamp_right_square_bracket_left_square_bracketeq_right_square_bracket (String.t): Event timestamp: equal
    - :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load
    - :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page
  ## Returns

  {:ok, TelnyxAPI.Model.ListCallEventsResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec list_call_events(Tesla.Env.client, keyword()) :: {:ok, TelnyxAPI.Model.ListCallEventsResponse.t} | {:ok, TelnyxAPI.Model.Errors.t} | {:error, Tesla.Env.t}
  def list_call_events(connection, opts \\ []) do
    optional_params = %{
      :"filter[call_leg_id]" => :query,
      :"filter[call_session_id]" => :query,
      :"filter[status]" => :query,
      :"filter[type]" => :query,
      :"filter[event_timestamp][gt]" => :query,
      :"filter[event_timestamp][gte]" => :query,
      :"filter[event_timestamp][lt]" => :query,
      :"filter[event_timestamp][lte]" => :query,
      :"filter[event_timestamp][eq]" => :query,
      :"page[number]" => :query,
      :"page[size]" => :query
    }
    %{}
    |> method(:get)
    |> url("/call_events")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %TelnyxAPI.Model.ListCallEventsResponse{}},
      { :default, %TelnyxAPI.Model.Errors{}}
    ])
  end
end
