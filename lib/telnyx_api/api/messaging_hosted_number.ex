# NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
# https://openapi-generator.tech
# Do not edit the class manually.

defmodule TelnyxAPI.Api.MessagingHostedNumber do
  @moduledoc """
  API calls for all endpoints tagged `MessagingHostedNumber`.
  """

  alias TelnyxAPI.Connection
  import TelnyxAPI.RequestBuilder


  @doc """
  Create a messaging hosted number order

  ## Parameters

  - connection (TelnyxAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :body (CreateMessagingHostedNumberOrderRequest): Message payload
  ## Returns

  {:ok, TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec create_messaging_hosted_number_order(Tesla.Env.client, keyword()) :: {:ok, TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse.t} | {:ok, TelnyxAPI.Model.Errors.t} | {:error, Tesla.Env.t}
  def create_messaging_hosted_number_order(connection, opts \\ []) do
    optional_params = %{
      :body => :body
    }
    %{}
    |> method(:post)
    |> url("/messaging_hosted_number_orders")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse{}},
      { :default, %TelnyxAPI.Model.Errors{}}
    ])
  end

  @doc """
  Delete a messaging hosted number

  ## Parameters

  - connection (TelnyxAPI.Connection): Connection to server
  - id (String.t): Identifies the type of resource.
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, TelnyxAPI.Model.RetrieveMessagingHostedNumberResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec delete_messaging_hosted_number(Tesla.Env.client, String.t, keyword()) :: {:ok, TelnyxAPI.Model.Errors.t} | {:ok, TelnyxAPI.Model.RetrieveMessagingHostedNumberResponse.t} | {:error, Tesla.Env.t}
  def delete_messaging_hosted_number(connection, id, _opts \\ []) do
    %{}
    |> method(:delete)
    |> url("/messaging_hosted_numbers/#{id}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %TelnyxAPI.Model.RetrieveMessagingHostedNumberResponse{}},
      { :default, %TelnyxAPI.Model.Errors{}}
    ])
  end

  @doc """
  List messaging hosted number orders

  ## Parameters

  - connection (TelnyxAPI.Connection): Connection to server
  - opts (KeywordList): [optional] Optional parameters
    - :page_left_square_bracketnumber_right_square_bracket (integer()): The page number to load
    - :page_left_square_bracketsize_right_square_bracket (integer()): The size of the page
  ## Returns

  {:ok, TelnyxAPI.Model.ListMessagingHostedNumberOrderResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec list_messaging_hosted_number_order(Tesla.Env.client, keyword()) :: {:ok, TelnyxAPI.Model.ListMessagingHostedNumberOrderResponse.t} | {:ok, TelnyxAPI.Model.Errors.t} | {:error, Tesla.Env.t}
  def list_messaging_hosted_number_order(connection, opts \\ []) do
    optional_params = %{
      :"page[number]" => :query,
      :"page[size]" => :query
    }
    %{}
    |> method(:get)
    |> url("/messaging_hosted_number_orders")
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %TelnyxAPI.Model.ListMessagingHostedNumberOrderResponse{}},
      { :default, %TelnyxAPI.Model.Errors{}}
    ])
  end

  @doc """
  Retrieve a messaging hosted number order

  ## Parameters

  - connection (TelnyxAPI.Connection): Connection to server
  - id (String.t): Identifies the type of resource.
  - opts (KeywordList): [optional] Optional parameters
  ## Returns

  {:ok, TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec retrieve_messaging_hosted_number_order(Tesla.Env.client, String.t, keyword()) :: {:ok, TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse.t} | {:ok, TelnyxAPI.Model.Errors.t} | {:error, Tesla.Env.t}
  def retrieve_messaging_hosted_number_order(connection, id, _opts \\ []) do
    %{}
    |> method(:get)
    |> url("/messaging_hosted_number_orders/#{id}")
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse{}},
      { :default, %TelnyxAPI.Model.Errors{}}
    ])
  end

  @doc """
  Upload file required for a messaging hosted number order

  ## Parameters

  - connection (TelnyxAPI.Connection): Connection to server
  - id (String.t): Identifies the type of resource.
  - opts (KeywordList): [optional] Optional parameters
    - :loa (String.t): Must be a signed LOA for the numbers in the order in PDF format.
    - :bill (String.t): Must be the last month's bill with proof of ownership of all of the numbers in the order in PDF format.
  ## Returns

  {:ok, TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse.t} on success
  {:error, Tesla.Env.t} on failure
  """
  @spec upload_file_messaging_hosted_number_order(Tesla.Env.client, String.t, keyword()) :: {:ok, TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse.t} | {:ok, TelnyxAPI.Model.Errors.t} | {:error, Tesla.Env.t}
  def upload_file_messaging_hosted_number_order(connection, id, opts \\ []) do
    optional_params = %{
      :"loa" => :form,
      :"bill" => :form
    }
    %{}
    |> method(:post)
    |> url("/messaging_hosted_number_orders/#{id}/actions/file_upload")
    |> add_optional_params(optional_params, opts)
    |> ensure_body()
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> evaluate_response([
      { 200, %TelnyxAPI.Model.RetrieveMessagingHostedNumberOrderResponse{}},
      { :default, %TelnyxAPI.Model.Errors{}}
    ])
  end
end
